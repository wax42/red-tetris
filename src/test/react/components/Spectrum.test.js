import React from "react";
import { shallow } from "enzyme";
import _ from "lodash";
import Spectrum from "../../../client/components/Room/Spectrum";

describe("SPECTRUM.JSX", () => {
  it("should render self and subcomponent Spectrum", () => {
    const setup = () => {
      const props = {
        listSpectrums: [
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", "9", ".", ".", ".", ".", ".", "."],
          [".", ".", ".", "9", "9", ".", ".", ".", ".", "."],
          [".", ".", ".", "9", "9", ".", ".", ".", ".", "."]
        ]
      };

      const enzymeWrapper = shallow(<Spectrum {...props} />);

      return {
        props,
        enzymeWrapper
      };
    };
    const { enzymeWrapper } = setup();
    // expect(enzymeWrapper.find("div").hasClass("game")).toBeTruthy();
    expect(enzymeWrapper.find("GameGrid")).toBeTruthy();
  });
});
