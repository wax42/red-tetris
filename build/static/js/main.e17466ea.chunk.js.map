{"version":3,"sources":["client/components/Game.jsx","client/components/AppBoardInfo.jsx","client/actions/actions.js","client/components/Spectrum.jsx","client/reducers/reducers.js","client/actions/actionTypes.js","client/middlewares/socketMiddleware.js","client/App.js","client/serviceWorker.js","client/index.js"],"names":["GameGrid","props","grid","react_default","a","createElement","className","map","line","index","key","value","color","concat","GamePieces","piece","Game_GameGrid","Game","Game_GamePieces","InfoRedux","connect","state","console","log","test","actionClick","type","name","text","_ref","onClick","action","Title","AppBoardInfo","AppBoardInfo_Title","Spectrum","initialState","reducers","arguments","length","undefined","socketMiddleware","socket","io","dispatch","next","handleEvent","result","on","store","createStore","applyMiddleware","App","es","components_AppBoardInfo","components_Game","components_Spectrum","Boolean","window","location","hostname","match","ReactDOM","render","client_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e17466ea.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst GameGrid = (props) => {\n    const grid = props.grid;\n    return (\n        <div className=\"game-grid\">\n                {grid.map((line, index) => {\n                    return (\n                        <div className=\"line\" key={index}> \n                            {line.map((value, index) => {\n                                let color = \"color-form\" + value;\n                                return (\n                                    <div className={`box ${color}`} key={index}/>\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n        </div>\n    );\n}\n\nconst GamePieces = () => {\n    const pieces = [\n        [\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.']\n        ],\n        [\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.']\n        ],\n        [\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.'],\n            ['.', '.', '.', '.']\n        ]\n    ]\n    return (\n        <div className=\"game-pieces\">\n            {pieces.map((piece, index) => {\n                return (\n                    <GameGrid key={index} grid={piece}/>\n                );\n            })}\n        </div>\n    );\n}\n\n\nconst Game = () => {\n    const arr = [\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\n        ['.', '.', '.', '.', '1', '1', '1', '1', '1', '.']\n    ];\n    return (\n      <div className=\"game\">\n          <GameGrid grid={arr}/>\n          <GamePieces/>\n      </div>\n    );\n  }\n  \n  export default Game;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionClick } from \"../actions/actions\";\n\nconst handleClick = action => {\n  console.log(\"test\");\n  action();\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n\n  const test = state;\n  return { test };\n};\n\nconst Info = ({ test, actionClick }) => {\n  console.log(\"info\");\n  // console.log(actionClick);\n  return (\n    <div className=\"info\">\n      {test.name}\n      <button onClick={() => handleClick(actionClick)}>Click me</button>\n    </div>\n  );\n};\n\nconst InfoRedux = connect(\n  mapStateToProps,\n  { actionClick }\n)(Info);\n\nconst Title = () => {\n  return <div className=\"title\">Red Tetris</div>;\n};\n\nconst AppBoardInfo = () => {\n  return (\n    <div className=\"app-board-left\">\n      <Title />\n      <InfoRedux />\n    </div>\n  );\n};\n\nexport default AppBoardInfo;\n","import {\n  START_GAME,\n  NEXT_PIECE,\n  LINE_BREAK,\n  LIST_ROOM,\n  ROOM_ADD_PLAYER,\n  ROOM_DEL_PLAYER,\n  SEND_SPECTRUMS\n} from \"./actionTypes\";\nimport { EVENT } from \"../../common/common\";\n\nexport const startGame = () => {\n  return { type: START_GAME, event: EVENT.START_GAME };\n};\n\nexport const nextPiece = () => {\n  return { type: NEXT_PIECE, event: EVENT.NEXT_PIECE };\n};\n\nexport const lineBreak = () => {\n  return { type: LINE_BREAK, event: EVENT.LINE_BREAK };\n};\n\nexport const listRoom = () => {\n  return { type: LIST_ROOM, event: EVENT.LIST_ROOM };\n};\n\nexport const roomAddPlayer = () => {\n  return { type: ROOM_ADD_PLAYER, event: EVENT.ROOM_ADD_PLAYER };\n};\n\nexport const roomDelPlayer = () => {\n  return { type: ROOM_DEL_PLAYER, event: EVENT.ROOM_DEL_PLAYER };\n};\n\nexport const sendSpectrums = () => {\n  return { type: SEND_SPECTRUMS, event: EVENT.SEND_SPECTRUMS };\n};\n\n//TODO DELETE\nexport function actionClick() {\n  console.log(\"actionClick\");\n  return { type: \"RER\", name: \"yoyo\", text: \"Cliiick\" };\n}\n","import React from \"react\";\n\nconst Spectrum = () => {\n  return <div className=\"spectrum\">Spectrum</div>;\n};\n\nexport default Spectrum;\n","import { START_GAME } from \"../actions/actionTypes\";\n\nconst initialState = {\n  name: \"toto\"\n};\n\nconst reducers = (state = initialState, action) => {\n  console.log(`State: ${state}`);\n  console.log(`Action: ${action}`);\n\n  switch (action.type) {\n    case START_GAME: {\n      //Modifier le state\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n","export const START_GAME = \"START_GAME\";\nexport const NEXT_PIECE = \"NEXT_PIECE\";\nexport const LINE_BREAK = \"LINE_BREAK\";\nexport const LIST_ROOM = \"LIST_ROOM\";\nexport const ROOM_ADD_PLAYER = \"ROOM_ADD_PLAYER\";\nexport const ROOM_DEL_PLAYER = \"ROOM_DEL_PLAYER\";\nexport const SEND_SPECTRUMS = \"SEND_SPECTRUMS\";\n","import io from 'socket.io-client';\n\nconst socketMiddleware = () => {\n  const socket = io(\"http://localhost:3001\");\n\n  return ({ dispatch }) => next => (action) => {\n    /* if (typeof action === 'function') {\n      return next(action);\n    }   */\n\n    let event = \"test_server\";\n\n    /* let leave = false;\n    if (leave) {\n      socket.removeListener(event);\n    } */\n    console.log(\"SocketMiddlware\");\n\n    //  Type --> actionType\n    let handle = \"handle\";\n    let handleEvent = handle;\n    if (typeof handleEvent === 'string') {\n        handleEvent = (result) => {\n            console.log(\"Listenner\", result);\n            dispatch({ type: handle, result, test:\"test\"});\n        }\n    }\n    return socket.on(event, handleEvent);\n  };\n}\n\nexport default socketMiddleware;","// import logo from './logo.svg';\nimport React from \"react\";\nimport Game from \"./components/Game\";\nimport AppBoardInfo from \"./components/AppBoardInfo\";\nimport Spectrum from \"./components/Spectrum\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers/reducers\";\nimport socketMiddleware from \"./middlewares/socketMiddleware\";\n\nconst store = createStore(reducers,\n  applyMiddleware(socketMiddleware()));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <div className=\"app-board\">\n          <AppBoardInfo />\n          <Game />\n        </div>\n        <Spectrum className=\"app-spectrum\" />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}